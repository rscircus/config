# vim: set fileencoding=utf-8 ft=conf foldmethod=marker :
map f1 pipe @ansi window less +G -R

# Memory weight
scrollback_lines 100000

# Visibility
include ./kitty-themes/themes/Tango_Light.conf
term xterm-256color
window_border_width 0
window_margin_width 0
window_padding_width 0
adjust_line_height 0
adjust_column_width 0
macos_thicken_font 0.75

# Tabs
tab_bar_edge top
tab_bar_style powerline
tab_separator "ยง"
tab_title_template "{index}: {title}"

# Mechanics
editor nvim
allow_remote_control no
strip_trailing_spaces always
enable_audio_bell no
visual_bell_duration 0.00

cursor_stop_blinking_after 5.0

# Selecting and act on visible text {{{

# Use the hints kitten to select text and either pass it to an
# external program or insert it into the terminal or copy it to the
# clipboard.

map kitty_mod+e kitten hints

# Open a currently visible URL using the keyboard. The program used
# to open the URL is specified in open_url_with.

map kitty_mod+p>f kitten hints --type path --program -

# Select a path/filename and insert it into the terminal. Useful, for
# instance to run git commands on a filename output from a previous
# git command.

map kitty_mod+p>shift+f kitten hints --type path

# Select a path/filename and open it with the default open program.

map kitty_mod+p>l kitten hints --type line --program -

# Select a line of text and insert it into the terminal. Use for the
# output of things like: ls -1

map kitty_mod+p>w kitten hints --type word --program -

# Select words and insert into terminal.

map kitty_mod+p>h kitten hints --type hash --program -

# Select something that looks like a hash and insert it into the
# terminal. Useful with git, which uses sha1 hashes to identify
# commits

map kitty_mod+p>n kitten hints --type linenum

# Select something that looks like filename:linenum and open it in
# vim at the specified line number.


# The hints kitten has many more modes of operation that you can map
# to different shortcuts. For a full description see kittens/hints.
# }}}


# Font {{{
font_family Iosevka Term
#font_family Operator Mono
#font_family JetBrains Mono
#font_family Victor Mono SemiBold
bold_font auto
italic_font auto
bold_italic_font auto
font_size 14.0
disable_ligatures never

# }}}

# Connection to the web
url_color #26BBD9
url_style curly
open_url_modifiers ctrl+shift
open_url_with $BROWSER

# Mouse and Clipboard
copy_on_select yes

# Programs
scrollback_pager nvim -c 'set ft=man' -
scrollback_lines 2000


# Keyboard shortcuts {{{
# Docs {{{ #

# For a list of key names, see: the GLFW key macros
# <https://github.com/kovidgoyal/kitty/blob/master/glfw/glfw3.h#L349>.
# The name to use is the part after the GLFW_KEY_ prefix. For a list
# of modifier names, see: GLFW mods
# <https://www.glfw.org/docs/latest/group__mods.html>

# On Linux you can also use XKB key names to bind keys that are not
# supported by GLFW. See XKB keys
# <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
# keysyms.h> for a list of key names. The name to use is the part
# after the XKB_KEY_ prefix. Note that you can only use an XKB key
# name for keys that are not known as GLFW keys.

# Finally, you can use raw system key codes to map keys, again only
# for keys that are not known as GLFW keys. To see the system key
# code for a key, start kitty with the kitty --debug-keyboard option.
# Then kitty will output some debug text for every key event. In that
# text look for ``native_code`` the value of that becomes the key
# name in the shortcut. For example:

# .. code-block: none

#     on_key_input: glfw key: 65 native_code: 0x61 action: PRESS mods: 0x0 text: 'a'

# Here, the key name for the A key is 0x61 and you can use it with:

#     map ctrl+0x61 something

# to map ctrl+a to something.

# You can use the special action no_op to unmap a keyboard shortcut
# that is assigned in the default configuration:

#     map kitty_mod+space no_op

# You can combine multiple actions to be triggered by a single
# shortcut, using the syntax below:

#     map key combine <separator> action1 <separator> action2 <separator> action3 ...

# For example:

#     map kitty_mod+e combine : new_window : next_layout

# this will create a new window and switch to the next available
# layout

# You can use multi-key shortcuts using the syntax shown below:

#     map key1>key2>key3 action

# For example:

#     map ctrl+f>2 set_font_size 20

# }}} Docs #

# TODO Not sorted yet
map ctrl+equal    increase_font_size
map ctrl+minus    decrease_font_size
map ctrl+backspace restore_font_size


# Kitty mod {{{ #

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts.
kitty_mod ctrl+shift

# }}} Kitty mod #

# Clipboard {{{
map kitty_mod+v        paste_from_clipboard
map kitty_mod+s        paste_from_selection
map kitty_mod+c        copy_to_clipboard
map shift+insert       paste_from_selection

# You can also pass the contents of the current selection to any
# program using pass_selection_to_program. By default, the system's
# open program is used, but you can specify your own, the selection
# will be passed as a command line argument to the program, for
# example:

#     map kitty_mod+o pass_selection_to_program firefox

# You can pass the current selection to a terminal program running in
# a new kitty window, by using the @selection placeholder:

#     map kitty_mod+y new_window less @selection

#     map kitty_mod+y new_window less @selection
map kitty_mod+o  pass_selection_to_program
# }}} --- Clipboard

# Scrolling {{{
map kitty_mod+up        scroll_line_up
map kitty_mod+down      scroll_line_down
map kitty_mod+i         scroll_line_up
map kitty_mod+j         no_op
map kitty_mod+k         scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end
map kitty_mod+h         show_scrollback
# }}} --- Scrolling

# Selecting and act on visible text {{{

# Use the hints kitten to select text and either pass it to an
# external program or insert it into the terminal or copy it to the
# clipboard.

map kitty_mod+e kitten hints

# Open a currently visible URL using the keyboard. The program used
# to open the URL is specified in open_url_with.

map kitty_mod+p>f kitten hints --type path --program -

# Select a path/filename and insert it into the terminal. Useful, for
# instance to run git commands on a filename output from a previous
# git command.

map kitty_mod+p>shift+f kitten hints --type path

# Select a path/filename and open it with the default open program.

map kitty_mod+p>l kitten hints --type line --program -

# Select a line of text and insert it into the terminal. Use for the
# output of things like: ls -1

map kitty_mod+p>w kitten hints --type word --program -

# Select words and insert into terminal.

map kitty_mod+p>h kitten hints --type hash --program -

# Select something that looks like a hash and insert it into the
# terminal. Useful with git, which uses sha1 hashes to identify
# commits

map kitty_mod+p>n kitten hints --type linenum

# Select something that looks like filename:linenum and open it in
# vim at the specified line number.


# The hints kitten has many more modes of operation that you can map
# to different shortcuts. For a full description see kittens/hints.
# }}} --- kitty hints


# }}}

# Beautiful inspiration {{{
# - https://github.com/infokiller/config-public/blob/master/.config/kitty/kitty.conf
# - https://github.com/PengjunW/.config/blob/master/kitty/kitty.conf
#
# }}}
